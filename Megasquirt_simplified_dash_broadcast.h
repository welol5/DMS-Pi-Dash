/* CAN message encoder/decoder: automatically generated - do not edit.

This file was generated by dbcc: See <https://github.com/howerj/dbcc>

Consider donating; see the repo for more information, this project 
requires your support to continue.

For those with paid support or to inquire about paid support
please Email <mailto:hello.operator.co.uk@gmail.com>.

*/

#ifndef MEGASQUIRT_SIMPLIFIED_DASH_BROADCAST_H
#define MEGASQUIRT_SIMPLIFIED_DASH_BROADCAST_H

/* If the contents of this file have caused breaking changes for you, you could try using
   an older version of the generator. You can specify this on the command line with
   the -n option. */
#define DBCC_GENERATOR_VERSION (3)

#include <stdint.h>
#include <stdio.h>

#ifdef __cplusplus
extern "C" { 
#endif

#ifndef PREPACK
#define PREPACK
#endif

#ifndef POSTPACK
#define POSTPACK
#endif

#ifndef DBCC_TIME_STAMP
#define DBCC_TIME_STAMP
typedef uint32_t dbcc_time_stamp_t; /* Time stamp for message; you decide on units */
#endif

#ifndef DBCC_STATUS_ENUM
#define DBCC_STATUS_ENUM
typedef enum {
	DBCC_SIG_STAT_UNINITIALIZED_E = 0, /* Message never sent/received */
	DBCC_SIG_STAT_OK_E            = 1, /* Message ok */
	DBCC_SIG_STAT_ERROR_E         = 2, /* Encode/Decode/Timestamp/Any error */
} dbcc_signal_status_e;
#endif

#define CAN_ID_MEGASQUIRT_DASH0 (1512) /* 0x5e8 */
#define CAN_ID_MEGASQUIRT_DASH1 (1513) /* 0x5e9 */
#define CAN_ID_MEGASQUIRT_DASH2 (1514) /* 0x5ea */
#define CAN_ID_MEGASQUIRT_DASH3 (1515) /* 0x5eb */
#define CAN_ID_MEGASQUIRT_DASH4 (1516) /* 0x5ec */

typedef PREPACK struct {
	/* map: Manifold air pressure */
	/* scaling 0.1, offset 0.0, units kPa  */
	int16_t map;
	/* rpm: Engine RPM */
	/* scaling 1.0, offset 0.0, units RPM  */
	uint16_t rpm;
	/* clt: Coolant temperature */
	/* scaling 0.1, offset 0.0, units deg F  */
	int16_t clt;
	/* tps: Throttle position */
	/* scaling 0.1, offset 0.0, units %  */
	int16_t tps;
} POSTPACK can_0x5e8_megasquirt_dash0_t;

typedef PREPACK struct {
	/* pw1: Main pulsewidth bank 1 */
	/* scaling 0.0, offset 0.0, units ms  */
	uint16_t pw1;
	/* pw2: Main pulsewidth bank 2 */
	/* scaling 0.0, offset 0.0, units ms  */
	uint16_t pw2;
	/* mat: Manifold air temperature */
	/* scaling 0.1, offset 0.0, units deg F  */
	int16_t mat;
	/* adv_deg: Final ignition spark advance */
	/* scaling 0.1, offset 0.0, units deg BTDC  */
	int16_t adv_deg;
} POSTPACK can_0x5e9_megasquirt_dash1_t;

typedef PREPACK struct {
	/* egocor1: EGO bank 1 correction */
	/* scaling 0.1, offset 0.0, units %  */
	int16_t egocor1;
	/* egt1: EGT cyl #1 */
	/* scaling 0.1, offset 0.0, units degF  */
	int16_t egt1;
	/* pwseq1: Sequential pulsewidth for cyl #1 */
	/* scaling 0.0, offset 0.0, units ms  */
	int16_t pwseq1;
	/* afrtgt1: Bank 1 AFR target */
	/* scaling 0.1, offset 0.0, units AFR  */
	uint8_t afrtgt1;
	/* AFR1: AFR cyl #1 */
	/* scaling 0.1, offset 0.0, units AFR  */
	uint8_t AFR1;
} POSTPACK can_0x5ea_megasquirt_dash2_t;

typedef PREPACK struct {
	/* batt: Battery voltage */
	/* scaling 0.1, offset 0.0, units V  */
	int16_t batt;
	/* sensors1: Generic sensor input 1 (gpioadc0 on MS2) */
	/* scaling 0.0, offset 0.0, units none  */
	int16_t sensors1;
	/* sensors2: Generic sensor input 2 (gpioadc1 on MS2) */
	/* scaling 0.0, offset 0.0, units none  */
	int16_t sensors2;
	/* knk_rtd: Knock retard */
	/* scaling 0.1, offset 0.0, units deg  */
	uint8_t knk_rtd;
} POSTPACK can_0x5eb_megasquirt_dash3_t;

typedef PREPACK struct {
	/* VSS1: Vehicle speed 1 */
	/* scaling 0.1, offset 0.0, units m/s  */
	uint16_t VSS1;
	/* tc_retard: Traction control retard */
	/* scaling 0.1, offset 0.0, units def  */
	int16_t tc_retard;
	/* launch_timing: Launch control timing */
	/* scaling 0.1, offset 0.0, units deg  */
	int16_t launch_timing;
} POSTPACK can_0x5ec_megasquirt_dash4_t;

typedef PREPACK struct {
	dbcc_time_stamp_t can_0x5e8_megasquirt_dash0_time_stamp_rx;
	dbcc_time_stamp_t can_0x5e9_megasquirt_dash1_time_stamp_rx;
	dbcc_time_stamp_t can_0x5ea_megasquirt_dash2_time_stamp_rx;
	dbcc_time_stamp_t can_0x5eb_megasquirt_dash3_time_stamp_rx;
	dbcc_time_stamp_t can_0x5ec_megasquirt_dash4_time_stamp_rx;
	unsigned can_0x5e8_megasquirt_dash0_status : 2;
	unsigned can_0x5e8_megasquirt_dash0_tx : 1;
	unsigned can_0x5e8_megasquirt_dash0_rx : 1;
	unsigned can_0x5e9_megasquirt_dash1_status : 2;
	unsigned can_0x5e9_megasquirt_dash1_tx : 1;
	unsigned can_0x5e9_megasquirt_dash1_rx : 1;
	unsigned can_0x5ea_megasquirt_dash2_status : 2;
	unsigned can_0x5ea_megasquirt_dash2_tx : 1;
	unsigned can_0x5ea_megasquirt_dash2_rx : 1;
	unsigned can_0x5eb_megasquirt_dash3_status : 2;
	unsigned can_0x5eb_megasquirt_dash3_tx : 1;
	unsigned can_0x5eb_megasquirt_dash3_rx : 1;
	unsigned can_0x5ec_megasquirt_dash4_status : 2;
	unsigned can_0x5ec_megasquirt_dash4_tx : 1;
	unsigned can_0x5ec_megasquirt_dash4_rx : 1;
	can_0x5e8_megasquirt_dash0_t can_0x5e8_megasquirt_dash0;
	can_0x5e9_megasquirt_dash1_t can_0x5e9_megasquirt_dash1;
	can_0x5ea_megasquirt_dash2_t can_0x5ea_megasquirt_dash2;
	can_0x5eb_megasquirt_dash3_t can_0x5eb_megasquirt_dash3;
	can_0x5ec_megasquirt_dash4_t can_0x5ec_megasquirt_dash4;
} POSTPACK can_obj_megasquirt_simplified_dash_broadcast_h_t;

int unpack_message(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, const unsigned long id, uint64_t data, uint8_t dlc, dbcc_time_stamp_t time_stamp);
int pack_message(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, const unsigned long id, uint64_t *data);
int message_dlc(const unsigned long id);
int print_message(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, const unsigned long id, FILE *output);

int decode_can_0x5e8_map(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5e8_map(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);
int decode_can_0x5e8_rpm(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, uint16_t *out);
int encode_can_0x5e8_rpm(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, uint16_t in);
int decode_can_0x5e8_clt(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5e8_clt(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);
int decode_can_0x5e8_tps(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5e8_tps(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);


int decode_can_0x5e9_pw1(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5e9_pw1(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);
int decode_can_0x5e9_pw2(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5e9_pw2(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);
int decode_can_0x5e9_mat(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5e9_mat(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);
int decode_can_0x5e9_adv_deg(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5e9_adv_deg(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);


int decode_can_0x5ea_egocor1(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5ea_egocor1(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);
int decode_can_0x5ea_egt1(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5ea_egt1(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);
int decode_can_0x5ea_pwseq1(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5ea_pwseq1(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);
int decode_can_0x5ea_afrtgt1(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5ea_afrtgt1(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);
int decode_can_0x5ea_AFR1(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5ea_AFR1(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);


int decode_can_0x5eb_batt(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5eb_batt(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);
int decode_can_0x5eb_sensors1(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5eb_sensors1(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);
int decode_can_0x5eb_sensors2(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5eb_sensors2(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);
int decode_can_0x5eb_knk_rtd(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5eb_knk_rtd(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);


int decode_can_0x5ec_VSS1(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5ec_VSS1(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);
int decode_can_0x5ec_tc_retard(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5ec_tc_retard(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);
int decode_can_0x5ec_launch_timing(const can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double *out);
int encode_can_0x5ec_launch_timing(can_obj_megasquirt_simplified_dash_broadcast_h_t *o, double in);


#ifdef __cplusplus
} 
#endif

#endif
